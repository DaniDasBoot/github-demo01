name: Security Review
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  security:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-west-2
    permissions:
      contents: read
      pull-requests: write
      security-events: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      
      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Invoke Bedrock
        id: security-review
        uses: anthropics/claude-code-action@v1
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          use_bedrock: "true"
          settings: |
            {
              "model": "opusplan",
              "env": {
                "ANTHROPIC_DEFAULT_HAIKU_MODEL": "arn:aws:bedrock:us-west-2:912688296143:inference-profile/us.anthropic.claude-3-5-haiku-20241022-v1:0",
                "ANTHROPIC_DEFAULT_OPUS_MODEL": "arn:aws:bedrock:us-west-2:912688296143:inference-profile/us.anthropic.claude-opus-4-1-20250805-v1:0",
                "ANTHROPIC_DEFAULT_SONNET_MODEL": "arn:aws:bedrock:us-west-2:912688296143:inference-profile/us.anthropic.claude-sonnet-4-20250514-v1:0"
              }
            }
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}

            Perform a comprehensive security review:

            ## OWASP Top 10 Analysis
            - SQL Injection vulnerabilities
            - Cross-Site Scripting (XSS)
            - Broken Authentication
            - Sensitive Data Exposure
            - XML External Entities (XXE)
            - Broken Access Control
            - Security Misconfiguration
            - Cross-Site Request Forgery (CSRF)
            - Using Components with Known Vulnerabilities
            - Insufficient Logging & Monitoring

            ## Additional Security Checks
            - Hardcoded secrets or credentials
            - Insecure cryptographic practices
            - Unsafe deserialization
            - Server-Side Request Forgery (SSRF)
            - Race conditions or TOCTOU issues

            Rate severity as: CRITICAL, HIGH, MEDIUM, LOW, or NONE.
            Post detailed findings with recommendations.

            At the end of your response, you must include a line indicating the security status of the analysis: "SECURITY_STATUS: [CRITICAL|HIGH|MEDIUM|LOW|NONE]"
            
          claude_args: |
            --allowedTools "mcp__github_inline_comment__create_inline_comment,Bash(gh pr comment:*),Bash(gh pr diff:*)" |
            --model "us.anthropic.claude-sonnet-4-20250514-v1:0"
      - name: Block merge on security issues
        if: >
          contains(steps.security-review.outputs.response, 'SECURITY_STATUS: CRITICAL') ||
          contains(steps.security-review.outputs.response, 'SECURITY_STATUS: HIGH')
        run: |
          echo "::error::PR blocked due to CRITICAL or HIGH security issues found in review"
          exit 1
